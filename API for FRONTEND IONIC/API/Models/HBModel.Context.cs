//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HBEntities : DbContext
    {
        public HBEntities()
            : base("name=HBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Cita> Citas { get; set; }
        public virtual DbSet<Ciudade> Ciudades { get; set; }
        public virtual DbSet<Colaboradore> Colaboradores { get; set; }
        public virtual DbSet<Especialidade> Especialidades { get; set; }
        public virtual DbSet<ExpedientePaciente> ExpedientePacientes { get; set; }
        public virtual DbSet<Medico> Medicos { get; set; }
        public virtual DbSet<Nacionalidad> Nacionalidads { get; set; }
        public virtual DbSet<Paciente> Pacientes { get; set; }
        public virtual DbSet<Promocione> Promociones { get; set; }
        public virtual DbSet<Residencia> Residencias { get; set; }
        public virtual DbSet<Servicio> Servicios { get; set; }
        public virtual DbSet<ServiciosEnPromocion> ServiciosEnPromocions { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<CitaEspecifica_Result> CitaEspecifica(Nullable<int> idcita)
        {
            var idcitaParameter = idcita.HasValue ?
                new ObjectParameter("idcita", idcita) :
                new ObjectParameter("idcita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CitaEspecifica_Result>("CitaEspecifica", idcitaParameter);
        }
    
        public virtual ObjectResult<ColaboradorEspecifico_Result> ColaboradorEspecifico(Nullable<int> idcolaborador)
        {
            var idcolaboradorParameter = idcolaborador.HasValue ?
                new ObjectParameter("idcolaborador", idcolaborador) :
                new ObjectParameter("idcolaborador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ColaboradorEspecifico_Result>("ColaboradorEspecifico", idcolaboradorParameter);
        }
    
        public virtual int CreatePacientes(string nombre, string apellido, string sapellido, string identidad, Nullable<int> edad, string genero, Nullable<int> nacionalidad, Nullable<int> ciudad, Nullable<int> residencia, Nullable<int> iduser)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var sapellidoParameter = sapellido != null ?
                new ObjectParameter("sapellido", sapellido) :
                new ObjectParameter("sapellido", typeof(string));
    
            var identidadParameter = identidad != null ?
                new ObjectParameter("identidad", identidad) :
                new ObjectParameter("identidad", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("edad", edad) :
                new ObjectParameter("edad", typeof(int));
    
            var generoParameter = genero != null ?
                new ObjectParameter("genero", genero) :
                new ObjectParameter("genero", typeof(string));
    
            var nacionalidadParameter = nacionalidad.HasValue ?
                new ObjectParameter("nacionalidad", nacionalidad) :
                new ObjectParameter("nacionalidad", typeof(int));
    
            var ciudadParameter = ciudad.HasValue ?
                new ObjectParameter("ciudad", ciudad) :
                new ObjectParameter("ciudad", typeof(int));
    
            var residenciaParameter = residencia.HasValue ?
                new ObjectParameter("residencia", residencia) :
                new ObjectParameter("residencia", typeof(int));
    
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreatePacientes", nombreParameter, apellidoParameter, sapellidoParameter, identidadParameter, edadParameter, generoParameter, nacionalidadParameter, ciudadParameter, residenciaParameter, iduserParameter);
        }
    
        public virtual int CreateUser(string correo, string password, Nullable<int> cotizaciones, Nullable<int> rol, Nullable<int> estado)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var cotizacionesParameter = cotizaciones.HasValue ?
                new ObjectParameter("cotizaciones", cotizaciones) :
                new ObjectParameter("cotizaciones", typeof(int));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateUser", correoParameter, passwordParameter, cotizacionesParameter, rolParameter, estadoParameter);
        }
    
        public virtual ObjectResult<getCitas_Result> getCitas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCitas_Result>("getCitas");
        }
    
        public virtual ObjectResult<getCitasM_Result> getCitasM(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCitasM_Result>("getCitasM", idParameter);
        }
    
        public virtual ObjectResult<getCitasP_Result> getCitasP(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCitasP_Result>("getCitasP", idParameter);
        }
    
        public virtual ObjectResult<getCiudades_Result> getCiudades()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCiudades_Result>("getCiudades");
        }
    
        public virtual ObjectResult<getColaboradores_Result> getColaboradores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getColaboradores_Result>("getColaboradores");
        }
    
        public virtual ObjectResult<getEspecialidad_Result> getEspecialidad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEspecialidad_Result>("getEspecialidad");
        }
    
        public virtual ObjectResult<getEspecialidadEspecifica_Result> getEspecialidadEspecifica(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEspecialidadEspecifica_Result>("getEspecialidadEspecifica", idParameter);
        }
    
        public virtual ObjectResult<getExpediente_Result> getExpediente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getExpediente_Result>("getExpediente");
        }
    
        public virtual ObjectResult<getExpedientePaciente_Result> getExpedientePaciente(Nullable<int> iDExpediente)
        {
            var iDExpedienteParameter = iDExpediente.HasValue ?
                new ObjectParameter("IDExpediente", iDExpediente) :
                new ObjectParameter("IDExpediente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getExpedientePaciente_Result>("getExpedientePaciente", iDExpedienteParameter);
        }
    
        public virtual ObjectResult<getMedicoEspecifico_Result> getMedicoEspecifico(Nullable<int> idmedico)
        {
            var idmedicoParameter = idmedico.HasValue ?
                new ObjectParameter("idmedico", idmedico) :
                new ObjectParameter("idmedico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMedicoEspecifico_Result>("getMedicoEspecifico", idmedicoParameter);
        }
    
        public virtual ObjectResult<getMedicos_Result> getMedicos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMedicos_Result>("getMedicos");
        }
    
        public virtual ObjectResult<getMedicosE_Result> getMedicosE(Nullable<int> idespecialidad)
        {
            var idespecialidadParameter = idespecialidad.HasValue ?
                new ObjectParameter("idespecialidad", idespecialidad) :
                new ObjectParameter("idespecialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMedicosE_Result>("getMedicosE", idespecialidadParameter);
        }
    
        public virtual ObjectResult<getNacionalidad_Result> getNacionalidad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getNacionalidad_Result>("getNacionalidad");
        }
    
        public virtual ObjectResult<getPacientes_Result> getPacientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPacientes_Result>("getPacientes");
        }
    
        public virtual ObjectResult<getPacienteUsuario_Result> getPacienteUsuario(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPacienteUsuario_Result>("getPacienteUsuario", idParameter);
        }
    
        public virtual ObjectResult<getPromociones_Result> getPromociones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPromociones_Result>("getPromociones");
        }
    
        public virtual ObjectResult<getResidencias_Result> getResidencias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getResidencias_Result>("getResidencias");
        }
    
        public virtual ObjectResult<getResidenciasE_Result> getResidenciasE(Nullable<int> idCiudad)
        {
            var idCiudadParameter = idCiudad.HasValue ?
                new ObjectParameter("idCiudad", idCiudad) :
                new ObjectParameter("idCiudad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getResidenciasE_Result>("getResidenciasE", idCiudadParameter);
        }
    
        public virtual ObjectResult<getServicios_Result> getServicios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getServicios_Result>("getServicios");
        }
    
        public virtual ObjectResult<getServiciosenPromocion_Result> getServiciosenPromocion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getServiciosenPromocion_Result>("getServiciosenPromocion");
        }
    
        public virtual ObjectResult<getUsers_Result> getUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUsers_Result>("getUsers");
        }
    
        public virtual ObjectResult<PacienteEspecifico_Result> PacienteEspecifico(Nullable<int> idpaciente)
        {
            var idpacienteParameter = idpaciente.HasValue ?
                new ObjectParameter("idpaciente", idpaciente) :
                new ObjectParameter("idpaciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PacienteEspecifico_Result>("PacienteEspecifico", idpacienteParameter);
        }
    
        public virtual ObjectResult<PromocionEspecifica_Result> PromocionEspecifica(Nullable<int> iDPromocion)
        {
            var iDPromocionParameter = iDPromocion.HasValue ?
                new ObjectParameter("IDPromocion", iDPromocion) :
                new ObjectParameter("IDPromocion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PromocionEspecifica_Result>("PromocionEspecifica", iDPromocionParameter);
        }
    
        public virtual ObjectResult<ServicioEspecifico_Result> ServicioEspecifico(Nullable<int> iDServicio)
        {
            var iDServicioParameter = iDServicio.HasValue ?
                new ObjectParameter("IDServicio", iDServicio) :
                new ObjectParameter("IDServicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServicioEspecifico_Result>("ServicioEspecifico", iDServicioParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<SPEspecifico_Result> SPEspecifico(Nullable<int> idsp)
        {
            var idspParameter = idsp.HasValue ?
                new ObjectParameter("idsp", idsp) :
                new ObjectParameter("idsp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPEspecifico_Result>("SPEspecifico", idspParameter);
        }
    
        public virtual ObjectResult<UserEspecifico_Result> UserEspecifico(Nullable<int> iduser)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserEspecifico_Result>("UserEspecifico", iduserParameter);
        }
    }
}
